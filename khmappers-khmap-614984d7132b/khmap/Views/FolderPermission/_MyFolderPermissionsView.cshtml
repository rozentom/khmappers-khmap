@model khmap.Models.FolderPermissionsViewModel


@*<div class="container-fluid fill">
    <div class="row">
        <div class="col-md-12">
            <div class="span12 well">*@
<div class="well">
    <h5><strong><i class="fa fa-user"></i> Users Permissions</strong></h5>
    <hr />
    <div class="row">
        <div class="col-md-7">
            <div class="input-group">
                <input type="text" id="searchUser" class="form-control" placeholder="Search for...">
                <span class="input-group-btn">
                    <button type="button" id="btnSearchUser" class="btn btn-default"><i class="glyphicon glyphicon-search"></i></button>
                </span>
            </div>
        </div>
        <div class="col-md-5">
            <button type="button" id="btnAddUser" class="btn btn-primary pull-right"><i class="fa fa-plus"></i> Add User</button>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-12">
            <table id="mapUserGrid" class="table" data-source="@Url.Action("GetFolderUserPermissionList", "FolderPermission", new { folderId = Model.Folder.Id })"></table>
        </div>
    </div>
</div>
@*</div>
            </div>
        </div>
    </div>*@


<!-- Modal -->
<div class="modal fade" id="userPermissionModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Edit User Permission</h4>
            </div>
            <div class="modal-body">
                <form class="form form-horizontal">
                    <input type="hidden" id="mid" />
                    <input type="hidden" id="uid" />
                    <div class="form-group">
                        <label for="email" class="control-label col-xs-3">Email</label>
                        <input type="text" class="form-control col-xs-8" id="email" placeholder="Email" disabled />
                    </div>
                    <div class="form-group">
                        <label for="name" class="control-label col-xs-3">Name</label>
                        <input type="text" class="form-control col-xs-8" id="name" placeholder="Name" disabled />
                    </div>
                    <div class="form-group">
                        <label for="permission" class="control-label col-xs-3">Permission</label>
                        <div>
                            <select class="form-control col-xs-8" id="permission">
                                <option value="0">Read & Write (RW)</option>
                                <option value="1">Read Only (RO)</option>
                            </select>
                        </div>
                    </div>

                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" id="btnSave" class="btn btn-primary">Save</button>
            </div>
        </div>
    </div>
</div>


<!-- Add user Modal -->
<div class="modal fade" id="AddUserPermissionModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Add User Permission</h4>
            </div>
            <div class="modal-body">
                <form class="form form-horizontal">
                    <input type="hidden" id="addUserMid" />
                    <div class="form-group">
                        <label for="email" class="control-label col-xs-3">Email</label>
                        <input type="text" class="form-control col-xs-8" id="addUserEmail" placeholder="Email" data-provide="typeahead" autocomplete="off">
                    </div>
                    <div class="form-group">
                        <label for="permission" class="control-label col-xs-3">Permission</label>
                        <div>
                            <select class="form-control col-xs-8" id="addUserPermission">
                                <option value="0">Read & Write (RW)</option>
                                <option value="1">Read Only (RO)</option>
                            </select>
                        </div>
                    </div>

                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" id="btnAdd" class="btn btn-primary">Save</button>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">
    var mapUserGrid;
    function AddUser() {
        var folderId = '@Model.Folder.Id';
        $("#addUserMid").val(folderId);
        $("#addUserEmail").val("");
        $("#addUserPermission").val(0);
        $("#AddUserPermissionModal").modal("show");
    }
    function SaveNewUser() {
        var newUser = {
            FId: $("#addUserMid").val(),
            Email: $("#addUserEmail").val(),
            Permission: $("#addUserPermission").val()
        };
        console.log(newUser);
        $.ajax({ url: '@Url.Action("AddFolderUserPermission", "FolderPermission")', type: "POST", data: { userEmail: newUser.Email, folderId: newUser.FId, permission: newUser.Permission } })
            .done(function () {
                mapUserGrid.reload();
                $("#AddUserPermissionModal").modal("hide");
            })
            .fail(function () {
                alert("Unable to save.");
                $("#AddUserPermissionModal").modal("hide");
            });
    }
    function Edit(e) {
        //console.log(e.data);
        $("#mid").val(e.data.record.FId);
        $("#uid").val(e.data.id);
        $("#email").val(e.data.record.Email);
        $("#name").val(e.data.record.FirstName + ' ' + e.data.record.LastName);
        $("#permission").val(e.data.record.Permission);
        $("#userPermissionModal").modal("show");
    }
    function Save() {
        var user = {
            FId: $("#mid").val(),
            UId: $("#uid").val(),
            Email: $("#email").val(),
            Name: $("#name").val(),
            Permission: $("#permission").val()
        };
        console.log(user);
        $.ajax({ url: '@Url.Action("SaveFolderUserPermission", "FolderPermission")', type: "POST", data: user })
            .done(function () {
                mapUserGrid.reload();
                $("#userPermissionModal").modal("hide");
            })
            .fail(function () {
                alert("Unable to save.");
                $("#userPermissionModal").modal("hide");
            });
    }
    function Remove(e) {
        $.ajax({ url: '@Url.Action("RemoveFolderUserPermission", "FolderPermission")', type: "POST", data: { userId: e.data.id, folderId: e.data.record.FId } })
            .done(function () {
                mapUserGrid.reload();
            })
            .fail(function () {
                alert("Unable to remove.");
            });
    }
    function SearchUser() {
        mapUserGrid.reload({ searchString: $("#searchUser").val() });
    }

    $(document).ready(function () {
        mapUserGrid = $("#mapUserGrid").grid({
            dataKey: "UId",
            uiLibrary: "bootstrap",
            //width: 200,
            fontSize: "12px",
            columns: [
                { field: "MId", hidden: true },
                { field: "UId", hidden: true },
                { field: "Email", title: "Email", sortable: true, width: 150 },
                { field: "FirstName", title: "First Name", sortable: true, hidden: true },
                { field: "LastName", title: "Last Name", sortable: true, hidden: true },
                { title: "Name", tmpl: "{FirstName} {LastName}", sortable: true, width: 120 },
                { field: "Permission", title: "Permission", hidden: true },
                { title: "Permission", tmpl: "{PermissionString}", sortable: true },
                { title: "", field: "Edit", width: 30, align: "center", type: "icon", icon: "glyphicon-pencil", tooltip: "Edit", events: { "click": Edit } },
                { title: "", field: "Delete", width: 30, align: "center", type: "icon", icon: "glyphicon-remove", tooltip: "Delete", events: { "click": Remove } }
            ],
            pager: { enable: true, limit: 5, sizes: [5, 10, 25, 50] }
        });
        mapUserGrid.on("cellDataBound", function (e, $wrapper, id, index, record) {
            if (record.Email === '@Model.Owner.Key.Email') {
                if ("Edit" === index || "Delete" === index) {
                    $wrapper.parent().attr("hidden", true);
                }
            }
        });
        mapUserGrid.on("rowDataBound", function (e, $row, id, record) {
            if (record.Email === '@Model.Owner.Key.Email') {
                $row.addClass("danger");
            }
        });
        $("#btnAddUser").on("click", AddUser);
        $("#btnSave").on("click", Save);
        $("#btnAdd").on("click", SaveNewUser);
        $("#btnSearchUser").on("click", SearchUser);
    });

    $(document).ready(function () {
        console.log('blalalala');
        $("#addUserEmail").typeahead({
            minLength: 1,
            source: function (query, process) {
                var users = [];
                map = {};

                // This is going to make an HTTP post request to the controller
                return $.post('@Url.Action("GetEmailsList", "User")', { query: query }, function (data) {

                    // Loop through and push to the array
                    $.each(data, function (i, user) {
                        map[user.Email] = user;
                        users.push(user.Email);
                    });

                    // Process the details
                    process(users);
                });
            },
            updater: function (item) {
                var selectedShortCode = map[item].FName;

                // Set the text to our selected id
                $("#addUserEmail").text("Selected : " + selectedShortCode);
                return item;
            }
        });
    });


</script>


<style>
    .form-horizontal .control-label {
        text-align: left !important;
    }

    .ownerCss {
        background-color: lightblue;
    }
</style>

